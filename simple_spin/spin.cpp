#include <cstdio>
#include <cstdlib>
#include <string>
#include <limits>
#include <algorithm>
#include <unistd.h>

#define GLFW_INCLUDE_GL3
#include <GLFW/glfw3.h>

#include "vectormath.h"
#include "geometry.h"
#include "manipulator.h"

//------------------------------------------------------------------------

static manipulator *gSceneManip;
static manipulator *gObjectManip;
static manipulator *gCurrentManip = NULL;

static bool gDrawWireframe = false;

static bool gStreamFrames = false;

static int gWindowWidth;
static int gWindowHeight;

static double gMotionReported = false;

static double gOldMouseX, gOldMouseY;
static int gButtonPressed = -1;

// XXX Allow these to be set by options
bool gPrintShaderLog = true;
bool gVerbose = true;

//----------------------------------------------------------------------------
// Actual GL functions

#define CHECK_OPENGL(l) {int _glerr ; if((_glerr = glGetError()) != GL_NO_ERROR) printf("GL Error: %04X at %d\n", _glerr, l); }

static bool CheckShaderCompile(GLuint shader, const std::string& shader_name)
{
    int status;
    glGetShaderiv(shader, GL_COMPILE_STATUS, &status);
    if(status == GL_TRUE)
	return true;

    if(gPrintShaderLog) {
        int length;
        glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &length);

        if (length > 0) {
            char log[length];
            glGetShaderInfoLog(shader, length, NULL, log);
            fprintf(stderr, "%s shader error log:\n%s\n", shader_name.c_str(), log);
        }

        fprintf(stderr, "%s compile failure.\n", shader_name.c_str());
        fprintf(stderr, "shader text:\n");
        glGetShaderiv(shader, GL_SHADER_SOURCE_LENGTH, &length);
        char source[length];
        glGetShaderSource(shader, length, NULL, source);
        fprintf(stderr, "%s\n", source);
    }
    return false;
}

static bool CheckProgramLink(GLuint program)
{
    int status;
    glGetProgramiv(program, GL_LINK_STATUS, &status);
    if(status == GL_TRUE)
	return true;

    if(gPrintShaderLog) {
        int log_length;
        glGetProgramiv(program, GL_INFO_LOG_LENGTH, &log_length);

        if (log_length > 0) {
            char log[log_length];
            glGetProgramInfoLog(program, log_length, NULL, log);
            fprintf(stderr, "program error log: %s\n",log);
        }
    }

    return false;
}

struct Vertex
{
    float v[3];
    float n[3];
};

struct Vertex Vertices[] = {
    {{-31.531658, -5.454563, 98.880981}, {-0.042442, -0.098477, 0.994234}},
    {{19.249924, 11.012655, 102.012672}, {-0.042442, -0.098477, 0.994234}},
    {{-15.320923, 16.778076, 101.325745}, {-0.042442, -0.098477, 0.994234}},
    {{-31.531658, -5.454563, 98.880981}, {-0.042442, -0.098477, 0.994234}},
    {{25.253532, -11.104286, 100.334518}, {-0.042442, -0.098477, 0.994234}},
    {{19.249924, 11.012655, 102.012672}, {-0.042442, -0.098477, 0.994234}},
    {{-31.531658, -5.454563, 98.880981}, {-0.042442, -0.098477, 0.994234}},
    {{-2.690855, -37.253845, 97.156601}, {-0.042442, -0.098477, 0.994234}},
    {{25.253532, -11.104286, 100.334518}, {-0.042442, -0.098477, 0.994234}},
    {{-31.531658, -5.454563, 98.880981}, {-0.042442, -0.098477, 0.994234}},
    {{-20.351404, -33.154793, 96.903900}, {-0.042442, -0.098477, 0.994234}},
    {{-2.690855, -37.253845, 97.156601}, {-0.042442, -0.098477, 0.994234}},
    {{-23.319143, 41.804649, 92.196327}, {-0.418454, 0.220003, 0.881190}},
    {{-31.531830, -5.454506, 98.880905}, {-0.418454, 0.220003, 0.881190}},
    {{-15.320862, 16.778015, 101.325806}, {-0.418454, 0.220003, 0.881190}},
    {{-23.319143, 41.804649, 92.196327}, {-0.418454, 0.220003, 0.881190}},
    {{-59.298508, -0.222227, 85.159416}, {-0.418454, 0.220003, 0.881190}},
    {{-31.531830, -5.454506, 98.880905}, {-0.418454, 0.220003, 0.881190}},
    {{-23.319143, 41.804649, 92.196327}, {-0.418454, 0.220003, 0.881190}},
    {{-62.608368, 37.950672, 75.258682}, {-0.418454, 0.220003, 0.881190}},
    {{-59.298508, -0.222227, 85.159416}, {-0.418454, 0.220003, 0.881190}},
    {{-23.319143, 41.804649, 92.196327}, {-0.418454, 0.220003, 0.881190}},
    {{-59.500340, 41.595581, 75.863373}, {-0.418454, 0.220003, 0.881190}},
    {{-62.608368, 37.950672, 75.258682}, {-0.418454, 0.220003, 0.881190}},
    {{19.249851, 11.012427, 102.012733}, {0.034654, 0.366489, 0.929777}},
    {{-23.319359, 41.804672, 92.196205}, {0.034654, 0.366489, 0.929777}},
    {{-15.320923, 16.777908, 101.325775}, {0.034654, 0.366489, 0.929777}},
    {{19.249851, 11.012427, 102.012733}, {0.034654, 0.366489, 0.929777}},
    {{-6.210737, 61.205452, 84.110298}, {0.034654, 0.366489, 0.929777}},
    {{-23.319359, 41.804672, 92.196205}, {0.034654, 0.366489, 0.929777}},
    {{19.249851, 11.012427, 102.012733}, {0.034654, 0.366489, 0.929777}},
    {{15.084214, 59.990860, 83.648682}, {0.034654, 0.366489, 0.929777}},
    {{-6.210737, 61.205452, 84.110298}, {0.034654, 0.366489, 0.929777}},
    {{19.249851, 11.012427, 102.012733}, {0.034654, 0.366489, 0.929777}},
    {{31.378319, 29.120117, 94.631927}, {0.034654, 0.366489, 0.929777}},
    {{15.084214, 59.990860, 83.648682}, {0.034654, 0.366489, 0.929777}},
    {{64.459724, 28.262747, 77.693748}, {0.440632, 0.488483, 0.753145}},
    {{15.084126, 59.990723, 83.648849}, {0.440632, 0.488483, 0.753145}},
    {{31.378254, 29.120155, 94.631973}, {0.440632, 0.488483, 0.753145}},
    {{64.459724, 28.262747, 77.693748}, {0.440632, 0.488483, 0.753145}},
    {{35.277401, 74.746094, 63.611942}, {0.440632, 0.488483, 0.753145}},
    {{15.084126, 59.990723, 83.648849}, {0.440632, 0.488483, 0.753145}},
    {{64.459724, 28.262747, 77.693748}, {0.440632, 0.488483, 0.753145}},
    {{51.366455, 68.483040, 59.084679}, {0.440632, 0.488483, 0.753145}},
    {{35.277401, 74.746094, 63.611942}, {0.440632, 0.488483, 0.753145}},
    {{64.459724, 28.262747, 77.693748}, {0.440632, 0.488483, 0.753145}},
    {{67.330338, 32.507927, 73.482246}, {0.440632, 0.488483, 0.753145}},
    {{51.366455, 68.483040, 59.084679}, {0.440632, 0.488483, 0.753145}},
    {{25.253632, -11.104248, 100.334511}, {0.426679, 0.036292, 0.903674}},
    {{31.378225, 29.120075, 94.632027}, {0.426679, 0.036292, 0.903674}},
    {{19.249908, 11.012512, 102.012741}, {0.426679, 0.036292, 0.903674}},
    {{25.253632, -11.104248, 100.334511}, {0.426679, 0.036292, 0.903674}},
    {{64.459694, 28.262672, 77.693802}, {0.426679, 0.036292, 0.903674}},
    {{31.378225, 29.120075, 94.632027}, {0.426679, 0.036292, 0.903674}},
    {{25.253632, -11.104248, 100.334511}, {0.426679, 0.036292, 0.903674}},
    {{66.667908, -12.714991, 79.163910}, {0.426679, 0.036292, 0.903674}},
    {{64.459694, 28.262672, 77.693802}, {0.426679, 0.036292, 0.903674}},
    {{25.253632, -11.104248, 100.334511}, {0.426679, 0.036292, 0.903674}},
    {{49.344727, -22.642761, 88.693146}, {0.426679, 0.036292, 0.903674}},
    {{66.667908, -12.714991, 79.163910}, {0.426679, 0.036292, 0.903674}},
    {{-2.690674, -37.254158, 97.156403}, {0.249998, -0.383792, 0.888935}},
    {{49.344910, -22.642855, 88.693031}, {0.249998, -0.383792, 0.888935}},
    {{25.253525, -11.104279, 100.334518}, {0.249998, -0.383792, 0.888935}},
    {{-2.690674, -37.254158, 97.156403}, {0.249998, -0.383792, 0.888935}},
    {{39.976410, -58.820412, 76.061569}, {0.249998, -0.383792, 0.888935}},
    {{49.344910, -22.642855, 88.693031}, {0.249998, -0.383792, 0.888935}},
    {{-2.690674, -37.254158, 97.156403}, {0.249998, -0.383792, 0.888935}},
    {{13.127590, -62.060299, 82.242439}, {0.249998, -0.383792, 0.888935}},
    {{39.976410, -58.820412, 76.061569}, {0.249998, -0.383792, 0.888935}},
    {{49.344887, -22.642879, 88.693054}, {0.601570, -0.397623, 0.692827}},
    {{80.736320, -21.537437, 61.677929}, {0.601570, -0.397623, 0.692827}},
    {{66.667938, -12.715157, 79.163887}, {0.601570, -0.397623, 0.692827}},
    {{49.344887, -22.642879, 88.693054}, {0.601570, -0.397623, 0.692827}},
    {{72.749138, -55.866386, 48.896774}, {0.601570, -0.397623, 0.692827}},
    {{80.736320, -21.537437, 61.677929}, {0.601570, -0.397623, 0.692827}},
    {{49.344887, -22.642879, 88.693054}, {0.601570, -0.397623, 0.692827}},
    {{51.403503, -67.060028, 61.238724}, {0.601570, -0.397623, 0.692827}},
    {{72.749138, -55.866386, 48.896774}, {0.601570, -0.397623, 0.692827}},
    {{49.344887, -22.642879, 88.693054}, {0.601570, -0.397623, 0.692827}},
    {{39.976349, -58.820370, 76.061653}, {0.601570, -0.397623, 0.692827}},
    {{51.403503, -67.060028, 61.238724}, {0.601570, -0.397623, 0.692827}},
    {{42.030006, -93.467781, 18.399895}, {0.582428, -0.742542, 0.330771}},
    {{51.403351, -67.059906, 61.238945}, {0.582428, -0.742542, 0.330771}},
    {{35.095718, -89.950218, 38.472450}, {0.582428, -0.742542, 0.330771}},
    {{42.030006, -93.467781, 18.399895}, {0.582428, -0.742542, 0.330771}},
    {{72.749199, -55.866173, 48.896858}, {0.582428, -0.742542, 0.330771}},
    {{51.403351, -67.059906, 61.238945}, {0.582428, -0.742542, 0.330771}},
    {{42.030006, -93.467781, 18.399895}, {0.582428, -0.742542, 0.330771}},
    {{81.560234, -59.625874, 24.985661}, {0.582428, -0.742542, 0.330771}},
    {{72.749199, -55.866173, 48.896858}, {0.582428, -0.742542, 0.330771}},
    {{42.030006, -93.467781, 18.399895}, {0.582428, -0.742542, 0.330771}},
    {{66.594910, -79.540619, 6.543747}, {0.582428, -0.742542, 0.330771}},
    {{81.560234, -59.625874, 24.985661}, {0.582428, -0.742542, 0.330771}},
    {{-5.464600, -81.075928, 65.262817}, {0.228936, -0.752020, 0.618106}},
    {{39.976326, -58.820404, 76.061646}, {0.228936, -0.752020, 0.618106}},
    {{13.127655, -62.060291, 82.242462}, {0.228936, -0.752020, 0.618106}},
    {{-5.464600, -81.075928, 65.262817}, {0.228936, -0.752020, 0.618106}},
    {{51.403309, -67.059959, 61.238937}, {0.228936, -0.752020, 0.618106}},
    {{39.976326, -58.820404, 76.061646}, {0.228936, -0.752020, 0.618106}},
    {{-5.464600, -81.075928, 65.262817}, {0.228936, -0.752020, 0.618106}},
    {{35.095692, -89.950211, 38.472496}, {0.228936, -0.752020, 0.618106}},
    {{51.403309, -67.059959, 61.238937}, {0.228936, -0.752020, 0.618106}},
    {{-5.464600, -81.075928, 65.262817}, {0.228936, -0.752020, 0.618106}},
    {{3.324722, -92.293488, 47.675930}, {0.228936, -0.752020, 0.618106}},
    {{35.095692, -89.950211, 38.472496}, {0.228936, -0.752020, 0.618106}},
    {{-20.351686, -33.155018, 96.903679}, {-0.150190, -0.563741, 0.812182}},
    {{13.127637, -62.060242, 82.242493}, {-0.150190, -0.563741, 0.812182}},
    {{-2.690655, -37.254166, 97.156403}, {-0.150190, -0.563741, 0.812182}},
    {{-20.351686, -33.155018, 96.903679}, {-0.150190, -0.563741, 0.812182}},
    {{-5.464652, -81.075874, 65.262810}, {-0.150190, -0.563741, 0.812182}},
    {{13.127637, -62.060242, 82.242493}, {-0.150190, -0.563741, 0.812182}},
    {{-20.351686, -33.155018, 96.903679}, {-0.150190, -0.563741, 0.812182}},
    {{-33.101524, -73.002014, 66.056015}, {-0.150190, -0.563741, 0.812182}},
    {{-5.464652, -81.075874, 65.262810}, {-0.150190, -0.563741, 0.812182}},
    {{-20.351686, -33.155018, 96.903679}, {-0.150190, -0.563741, 0.812182}},
    {{-41.589973, -51.662395, 79.810280}, {-0.150190, -0.563741, 0.812182}},
    {{-33.101524, -73.002014, 66.056015}, {-0.150190, -0.563741, 0.812182}},
    {{-33.101555, -73.002075, 66.055954}, {-0.261913, -0.858871, 0.440162}},
    {{3.324604, -92.293510, 47.675861}, {-0.261913, -0.858871, 0.440162}},
    {{-5.464687, -81.075943, 65.262733}, {-0.261913, -0.858871, 0.440162}},
    {{-33.101555, -73.002075, 66.055954}, {-0.261913, -0.858871, 0.440162}},
    {{-15.833031, -101.388725, 18.782522}, {-0.261913, -0.858871, 0.440162}},
    {{3.324604, -92.293510, 47.675861}, {-0.261913, -0.858871, 0.440162}},
    {{-33.101555, -73.002075, 66.055954}, {-0.261913, -0.858871, 0.440162}},
    {{-52.286861, -85.639114, 30.049265}, {-0.261913, -0.858871, 0.440162}},
    {{-15.833031, -101.388725, 18.782522}, {-0.261913, -0.858871, 0.440162}},
    {{-33.101555, -73.002075, 66.055954}, {-0.261913, -0.858871, 0.440162}},
    {{-54.154202, -82.088402, 36.125366}, {-0.261913, -0.858871, 0.440162}},
    {{-52.286861, -85.639114, 30.049265}, {-0.261913, -0.858871, 0.440162}},
    {{-11.357582, -103.650978, 5.863529}, {0.124205, -0.970381, 0.207207}},
    {{3.324718, -92.293526, 47.675797}, {0.124205, -0.970381, 0.207207}},
    {{-15.832886, -101.388733, 18.782471}, {0.124205, -0.970381, 0.207207}},
    {{-11.357582, -103.650978, 5.863529}, {0.124205, -0.970381, 0.207207}},
    {{35.095703, -89.950249, 38.472374}, {0.124205, -0.970381, 0.207207}},
    {{3.324718, -92.293526, 47.675797}, {0.124205, -0.970381, 0.207207}},
    {{-11.357582, -103.650978, 5.863529}, {0.124205, -0.970381, 0.207207}},
    {{42.029953, -93.467796, 18.399908}, {0.124205, -0.970381, 0.207207}},
    {{35.095703, -89.950249, 38.472374}, {0.124205, -0.970381, 0.207207}},
    {{-11.357582, -103.650978, 5.863529}, {0.124205, -0.970381, 0.207207}},
    {{21.097010, -101.565704, -4.920729}, {0.124205, -0.970381, 0.207207}},
    {{42.029953, -93.467796, 18.399908}, {0.124205, -0.970381, 0.207207}},
    {{-64.295593, -81.603722, -6.696350}, {-0.379074, -0.925346, 0.006111}},
    {{-15.833023, -101.388794, 18.782261}, {-0.379074, -0.925346, 0.006111}},
    {{-52.286865, -85.639168, 30.049019}, {-0.379074, -0.925346, 0.006111}},
    {{-64.295593, -81.603722, -6.696350}, {-0.379074, -0.925346, 0.006111}},
    {{-11.357806, -103.650993, 5.863578}, {-0.379074, -0.925346, 0.006111}},
    {{-15.833023, -101.388794, 18.782261}, {-0.379074, -0.925346, 0.006111}},
    {{-64.295593, -81.603722, -6.696350}, {-0.379074, -0.925346, 0.006111}},
    {{-28.738182, -97.109985, -22.737362}, {-0.379074, -0.925346, 0.006111}},
    {{-11.357806, -103.650993, 5.863578}, {-0.379074, -0.925346, 0.006111}},
    {{-64.295593, -81.603722, -6.696350}, {-0.379074, -0.925346, 0.006111}},
    {{-55.002941, -85.953423, -21.320412}, {-0.379074, -0.925346, 0.006111}},
    {{-28.738182, -97.109985, -22.737362}, {-0.379074, -0.925346, 0.006111}},
    {{-69.340515, -35.658310, 69.255127}, {-0.552692, -0.593525, 0.585029}},
    {{-33.101540, -73.002014, 66.056000}, {-0.552692, -0.593525, 0.585029}},
    {{-41.589943, -51.662392, 79.810295}, {-0.552692, -0.593525, 0.585029}},
    {{-69.340515, -35.658310, 69.255127}, {-0.552692, -0.593525, 0.585029}},
    {{-54.154282, -82.088326, 36.125366}, {-0.552692, -0.593525, 0.585029}},
    {{-33.101540, -73.002014, 66.056000}, {-0.552692, -0.593525, 0.585029}},
    {{-69.340515, -35.658310, 69.255127}, {-0.552692, -0.593525, 0.585029}},
    {{-78.235497, -54.485535, 41.130005}, {-0.552692, -0.593525, 0.585029}},
    {{-54.154282, -82.088326, 36.125366}, {-0.552692, -0.593525, 0.585029}},
    {{-59.298485, -0.222235, 85.159447}, {-0.492095, -0.241782, 0.836292}},
    {{-20.351723, -33.155136, 96.903603}, {-0.492095, -0.241782, 0.836292}},
    {{-31.531952, -5.454468, 98.880829}, {-0.492095, -0.241782, 0.836292}},
    {{-59.298485, -0.222235, 85.159447}, {-0.492095, -0.241782, 0.836292}},
    {{-41.589996, -51.662369, 79.810287}, {-0.492095, -0.241782, 0.836292}},
    {{-20.351723, -33.155136, 96.903603}, {-0.492095, -0.241782, 0.836292}},
    {{-59.298485, -0.222235, 85.159447}, {-0.492095, -0.241782, 0.836292}},
    {{-69.340485, -35.658291, 69.255188}, {-0.492095, -0.241782, 0.836292}},
    {{-41.589996, -51.662369, 79.810287}, {-0.492095, -0.241782, 0.836292}},
    {{-59.298485, -0.222235, 85.159447}, {-0.492095, -0.241782, 0.836292}},
    {{-73.326759, -19.029058, 71.939522}, {-0.492095, -0.241782, 0.836292}},
    {{-69.340485, -35.658291, 69.255188}, {-0.492095, -0.241782, 0.836292}},
    {{-78.235512, -54.485580, 41.129951}, {-0.713687, -0.671734, 0.198558}},
    {{-52.286961, -85.639061, 30.049210}, {-0.713687, -0.671734, 0.198558}},
    {{-54.154316, -82.088348, 36.125305}, {-0.713687, -0.671734, 0.198558}},
    {{-78.235512, -54.485580, 41.129951}, {-0.713687, -0.671734, 0.198558}},
    {{-64.295723, -81.603607, -6.696281}, {-0.713687, -0.671734, 0.198558}},
    {{-52.286961, -85.639061, 30.049210}, {-0.713687, -0.671734, 0.198558}},
    {{-78.235512, -54.485580, 41.129951}, {-0.713687, -0.671734, 0.198558}},
    {{-88.559372, -54.550888, -4.715721}, {-0.713687, -0.671734, 0.198558}},
    {{-64.295723, -81.603607, -6.696281}, {-0.713687, -0.671734, 0.198558}},
    {{-78.235512, -54.485580, 41.129951}, {-0.713687, -0.671734, 0.198558}},
    {{-90.722542, -45.204983, 23.427731}, {-0.713687, -0.671734, 0.198558}},
    {{-88.559372, -54.550888, -4.715721}, {-0.713687, -0.671734, 0.198558}},
    {{-76.960373, -47.938110, -50.746086}, {-0.728468, -0.631678, -0.265174}},
    {{-88.559387, -54.550838, -4.715749}, {-0.728468, -0.631678, -0.265174}},
    {{-92.170563, -42.897614, -22.013733}, {-0.728468, -0.631678, -0.265174}},
    {{-76.960373, -47.938110, -50.746086}, {-0.728468, -0.631678, -0.265174}},
    {{-64.295647, -81.603653, -6.696318}, {-0.728468, -0.631678, -0.265174}},
    {{-88.559387, -54.550838, -4.715749}, {-0.728468, -0.631678, -0.265174}},
    {{-76.960373, -47.938110, -50.746086}, {-0.728468, -0.631678, -0.265174}},
    {{-55.002922, -85.953392, -21.320498}, {-0.728468, -0.631678, -0.265174}},
    {{-64.295647, -81.603653, -6.696318}, {-0.728468, -0.631678, -0.265174}},
    {{-76.960373, -47.938110, -50.746086}, {-0.728468, -0.631678, -0.265174}},
    {{-60.052826, -66.156342, -53.585831}, {-0.728468, -0.631678, -0.265174}},
    {{-55.002922, -85.953392, -21.320498}, {-0.728468, -0.631678, -0.265174}},
    {{-101.506729, -9.945143, -20.758011}, {-0.881760, -0.226125, -0.413966}},
    {{-76.960373, -47.938087, -50.746124}, {-0.881760, -0.226125, -0.413966}},
    {{-92.170532, -42.897598, -22.013832}, {-0.881760, -0.226125, -0.413966}},
    {{-101.506729, -9.945143, -20.758011}, {-0.881760, -0.226125, -0.413966}},
    {{-75.607857, -16.174688, -70.972389}, {-0.881760, -0.226125, -0.413966}},
    {{-76.960373, -47.938087, -50.746124}, {-0.881760, -0.226125, -0.413966}},
    {{-101.506729, -9.945143, -20.758011}, {-0.881760, -0.226125, -0.413966}},
    {{-94.565933, 3.935097, -42.745872}, {-0.881760, -0.226125, -0.413966}},
    {{-75.607857, -16.174688, -70.972389}, {-0.881760, -0.226125, -0.413966}},
    {{-99.963898, -12.500523, 26.084602}, {-0.961482, -0.274790, 0.006563}},
    {{-88.559433, -54.550797, -4.715782}, {-0.961482, -0.274790, 0.006563}},
    {{-90.722603, -45.204872, 23.427677}, {-0.961482, -0.274790, 0.006563}},
    {{-99.963898, -12.500523, 26.084602}, {-0.961482, -0.274790, 0.006563}},
    {{-92.170555, -42.897625, -22.013720}, {-0.961482, -0.274790, 0.006563}},
    {{-88.559433, -54.550797, -4.715782}, {-0.961482, -0.274790, 0.006563}},
    {{-99.963898, -12.500523, 26.084602}, {-0.961482, -0.274790, 0.006563}},
    {{-101.506752, -9.945160, -20.757900}, {-0.961482, -0.274790, 0.006563}},
    {{-92.170555, -42.897625, -22.013720}, {-0.961482, -0.274790, 0.006563}},
    {{-99.963898, -12.500523, 26.084602}, {-0.961482, -0.274790, 0.006563}},
    {{-103.993172, 0.202584, 1.908552}, {-0.961482, -0.274790, 0.006563}},
    {{-101.506752, -9.945160, -20.757900}, {-0.961482, -0.274790, 0.006563}},
    {{-73.326851, -19.029074, 71.939430}, {-0.840786, -0.279612, 0.463569}},
    {{-78.235558, -54.485458, 41.130035}, {-0.840786, -0.279612, 0.463569}},
    {{-69.340576, -35.658337, 69.255089}, {-0.840786, -0.279612, 0.463569}},
    {{-73.326851, -19.029074, 71.939430}, {-0.840786, -0.279612, 0.463569}},
    {{-90.722565, -45.204884, 23.427832}, {-0.840786, -0.279612, 0.463569}},
    {{-78.235558, -54.485458, 41.130035}, {-0.840786, -0.279612, 0.463569}},
    {{-73.326851, -19.029074, 71.939430}, {-0.840786, -0.279612, 0.463569}},
    {{-99.963860, -12.500530, 26.084757}, {-0.840786, -0.279612, 0.463569}},
    {{-90.722565, -45.204884, 23.427832}, {-0.840786, -0.279612, 0.463569}},
    {{-73.326851, -19.029074, 71.939430}, {-0.840786, -0.279612, 0.463569}},
    {{-92.843307, -0.879534, 46.494812}, {-0.840786, -0.279612, 0.463569}},
    {{-99.963860, -12.500530, 26.084757}, {-0.840786, -0.279612, 0.463569}},
    {{-62.608261, 37.950798, 75.258713}, {-0.751250, 0.094100, 0.653275}},
    {{-73.326759, -19.029129, 71.939468}, {-0.751250, 0.094100, 0.653275}},
    {{-59.298409, -0.222229, 85.159470}, {-0.751250, 0.094100, 0.653275}},
    {{-62.608261, 37.950798, 75.258713}, {-0.751250, 0.094100, 0.653275}},
    {{-92.843338, -0.879490, 46.494682}, {-0.751250, 0.094100, 0.653275}},
    {{-73.326759, -19.029129, 71.939468}, {-0.751250, 0.094100, 0.653275}},
    {{-62.608261, 37.950798, 75.258713}, {-0.751250, 0.094100, 0.653275}},
    {{-87.441734, 29.403095, 47.917950}, {-0.751250, 0.094100, 0.653275}},
    {{-92.843338, -0.879490, 46.494682}, {-0.751250, 0.094100, 0.653275}},
    {{-87.441673, 29.403023, 47.918118}, {-0.952977, 0.159045, 0.257951}},
    {{-99.963852, -12.500574, 26.084673}, {-0.952977, 0.159045, 0.257951}},
    {{-92.843254, -0.879478, 46.494858}, {-0.952977, 0.159045, 0.257951}},
    {{-87.441673, 29.403023, 47.918118}, {-0.952977, 0.159045, 0.257951}},
    {{-103.993156, 0.202619, 1.908457}, {-0.952977, 0.159045, 0.257951}},
    {{-99.963852, -12.500574, 26.084673}, {-0.952977, 0.159045, 0.257951}},
    {{-87.441673, 29.403023, 47.918118}, {-0.952977, 0.159045, 0.257951}},
    {{-97.626335, 35.521461, 3.831656}, {-0.952977, 0.159045, 0.257951}},
    {{-103.993156, 0.202619, 1.908457}, {-0.952977, 0.159045, 0.257951}},
    {{-87.441673, 29.403023, 47.918118}, {-0.952977, 0.159045, 0.257951}},
    {{-89.993942, 43.690678, 28.516670}, {-0.952977, 0.159045, 0.257951}},
    {{-97.626335, 35.521461, 3.831656}, {-0.952977, 0.159045, 0.257951}},
    {{-69.697220, 42.041046, -64.833191}, {-0.768347, 0.109025, -0.630679}},
    {{-94.565933, 3.935115, -42.745842}, {-0.768347, 0.109025, -0.630679}},
    {{-89.278961, 31.421825, -42.950420}, {-0.768347, 0.109025, -0.630679}},
    {{-69.697220, 42.041046, -64.833191}, {-0.768347, 0.109025, -0.630679}},
    {{-75.607834, -16.174698, -70.972404}, {-0.768347, 0.109025, -0.630679}},
    {{-94.565933, 3.935115, -42.745842}, {-0.768347, 0.109025, -0.630679}},
    {{-69.697220, 42.041046, -64.833191}, {-0.768347, 0.109025, -0.630679}},
    {{-72.628227, -14.650315, -74.323334}, {-0.768347, 0.109025, -0.630679}},
    {{-75.607834, -16.174698, -70.972404}, {-0.768347, 0.109025, -0.630679}},
    {{-69.697220, 42.041046, -64.833191}, {-0.768347, 0.109025, -0.630679}},
    {{-59.487202, 18.407398, -83.000992}, {-0.768347, 0.109025, -0.630679}},
    {{-72.628227, -14.650315, -74.323334}, {-0.768347, 0.109025, -0.630679}},
    {{-97.626389, 35.521389, 3.831621}, {-0.963558, 0.179499, -0.198332}},
    {{-101.506760, -9.945023, -20.757965}, {-0.963558, 0.179499, -0.198332}},
    {{-103.993179, 0.202721, 1.908436}, {-0.963558, 0.179499, -0.198332}},
    {{-97.626389, 35.521389, 3.831621}, {-0.963558, 0.179499, -0.198332}},
    {{-94.565971, 3.935202, -42.745808}, {-0.963558, 0.179499, -0.198332}},
    {{-101.506760, -9.945023, -20.757965}, {-0.963558, 0.179499, -0.198332}},
    {{-97.626389, 35.521389, 3.831621}, {-0.963558, 0.179499, -0.198332}},
    {{-89.279022, 31.421764, -42.950394}, {-0.963558, 0.179499, -0.198332}},
    {{-94.565971, 3.935202, -42.745808}, {-0.963558, 0.179499, -0.198332}},
    {{-97.626389, 35.521389, 3.831621}, {-0.963558, 0.179499, -0.198332}},
    {{-91.209854, 46.555496, -18.253845}, {-0.963558, 0.179499, -0.198332}},
    {{-89.279022, 31.421764, -42.950394}, {-0.963558, 0.179499, -0.198332}},
    {{-59.500374, 41.595539, 75.863396}, {-0.697148, 0.496995, 0.516701}},
    {{-87.441719, 29.403004, 47.918076}, {-0.697148, 0.496995, 0.516701}},
    {{-62.608341, 37.950695, 75.258720}, {-0.697148, 0.496995, 0.516701}},
    {{-59.500374, 41.595539, 75.863396}, {-0.697148, 0.496995, 0.516701}},
    {{-89.993988, 43.690628, 28.516663}, {-0.697148, 0.496995, 0.516701}},
    {{-87.441719, 29.403004, 47.918076}, {-0.697148, 0.496995, 0.516701}},
    {{-59.500374, 41.595539, 75.863396}, {-0.697148, 0.496995, 0.516701}},
    {{-67.432358, 75.028061, 27.569199}, {-0.697148, 0.496995, 0.516701}},
    {{-89.993988, 43.690628, 28.516663}, {-0.697148, 0.496995, 0.516701}},
    {{-59.500374, 41.595539, 75.863396}, {-0.697148, 0.496995, 0.516701}},
    {{-51.647171, 70.769073, 55.551289}, {-0.697148, 0.496995, 0.516701}},
    {{-67.432358, 75.028061, 27.569199}, {-0.697148, 0.496995, 0.516701}},
    {{-67.432419, 75.028061, 27.569120}, {-0.804408, 0.589820, 0.070988}},
    {{-97.626343, 35.521492, 3.831730}, {-0.804408, 0.589820, 0.070988}},
    {{-89.994003, 43.690681, 28.516584}, {-0.804408, 0.589820, 0.070988}},
    {{-67.432419, 75.028061, 27.569120}, {-0.804408, 0.589820, 0.070988}},
    {{-91.209785, 46.555637, -18.253801}, {-0.804408, 0.589820, 0.070988}},
    {{-97.626343, 35.521492, 3.831730}, {-0.804408, 0.589820, 0.070988}},
    {{-67.432419, 75.028061, 27.569120}, {-0.804408, 0.589820, 0.070988}},
    {{-72.022789, 73.035156, -17.304922}, {-0.804408, 0.589820, 0.070988}},
    {{-91.209785, 46.555637, -18.253801}, {-0.804408, 0.589820, 0.070988}},
    {{-67.432419, 75.028061, 27.569120}, {-0.804408, 0.589820, 0.070988}},
    {{-64.269112, 80.300514, 18.401213}, {-0.804408, 0.589820, 0.070988}},
    {{-72.022789, 73.035156, -17.304922}, {-0.804408, 0.589820, 0.070988}},
    {{-72.022720, 73.035194, -17.304890}, {-0.730726, 0.555341, -0.397034}},
    {{-89.278976, 31.421734, -42.950455}, {-0.730726, 0.555341, -0.397034}},
    {{-91.209808, 46.555546, -18.253790}, {-0.730726, 0.555341, -0.397034}},
    {{-72.022720, 73.035194, -17.304890}, {-0.730726, 0.555341, -0.397034}},
    {{-69.697235, 42.040977, -64.833237}, {-0.730726, 0.555341, -0.397034}},
    {{-89.278976, 31.421734, -42.950455}, {-0.730726, 0.555341, -0.397034}},
    {{-72.022720, 73.035194, -17.304890}, {-0.730726, 0.555341, -0.397034}},
    {{-56.979038, 61.194435, -61.973633}, {-0.730726, 0.555341, -0.397034}},
    {{-69.697235, 42.040977, -64.833237}, {-0.730726, 0.555341, -0.397034}},
    {{-72.022720, 73.035194, -17.304890}, {-0.730726, 0.555341, -0.397034}},
    {{-59.236877, 79.008743, -32.930725}, {-0.730726, 0.555341, -0.397034}},
    {{-56.979038, 61.194435, -61.973633}, {-0.730726, 0.555341, -0.397034}},
    {{-6.210528, 61.205322, 84.110443}, {-0.326193, 0.596855, 0.733050}},
    {{-59.500397, 41.595497, 75.863380}, {-0.326193, 0.596855, 0.733050}},
    {{-23.319220, 41.804588, 92.196304}, {-0.326193, 0.596855, 0.733050}},
    {{-6.210528, 61.205322, 84.110443}, {-0.326193, 0.596855, 0.733050}},
    {{-51.647194, 70.769073, 55.551247}, {-0.326193, 0.596855, 0.733050}},
    {{-59.500397, 41.595497, 75.863380}, {-0.326193, 0.596855, 0.733050}},
    {{-6.210528, 61.205322, 84.110443}, {-0.326193, 0.596855, 0.733050}},
    {{-22.574894, 82.920021, 58.860523}, {-0.326193, 0.596855, 0.733050}},
    {{-51.647194, 70.769073, 55.551247}, {-0.326193, 0.596855, 0.733050}},
    {{-28.731544, 99.823433, 11.183145}, {-0.469038, 0.879630, -0.079087}},
    {{-72.022697, 73.035240, -17.304985}, {-0.469038, 0.879630, -0.079087}},
    {{-64.268997, 80.300613, 18.401100}, {-0.469038, 0.879630, -0.079087}},
    {{-28.731544, 99.823433, 11.183145}, {-0.469038, 0.879630, -0.079087}},
    {{-59.236938, 79.008759, -32.930733}, {-0.469038, 0.879630, -0.079087}},
    {{-72.022697, 73.035240, -17.304985}, {-0.469038, 0.879630, -0.079087}},
    {{-28.731544, 99.823433, 11.183145}, {-0.469038, 0.879630, -0.079087}},
    {{-33.303963, 94.042297, -28.436510}, {-0.469038, 0.879630, -0.079087}},
    {{-59.236938, 79.008759, -32.930733}, {-0.469038, 0.879630, -0.079087}},
    {{-28.731544, 99.823433, 11.183145}, {-0.469038, 0.879630, -0.079087}},
    {{-23.874033, 101.823967, 1.911541}, {-0.469038, 0.879630, -0.079087}},
    {{-33.303963, 94.042297, -28.436510}, {-0.469038, 0.879630, -0.079087}},
    {{-22.574944, 82.919991, 58.860573}, {-0.413298, 0.834793, 0.363738}},
    {{-67.432343, 75.028084, 27.569210}, {-0.413298, 0.834793, 0.363738}},
    {{-51.647156, 70.769112, 55.551270}, {-0.413298, 0.834793, 0.363738}},
    {{-22.574944, 82.919991, 58.860573}, {-0.413298, 0.834793, 0.363738}},
    {{-64.269012, 80.300583, 18.401232}, {-0.413298, 0.834793, 0.363738}},
    {{-67.432343, 75.028084, 27.569210}, {-0.413298, 0.834793, 0.363738}},
    {{-22.574944, 82.919991, 58.860573}, {-0.413298, 0.834793, 0.363738}},
    {{-28.731552, 99.823418, 11.183250}, {-0.413298, 0.834793, 0.363738}},
    {{-64.269012, 80.300583, 18.401232}, {-0.413298, 0.834793, 0.363738}},
    {{-22.574944, 82.919991, 58.860573}, {-0.413298, 0.834793, 0.363738}},
    {{-13.491224, 92.265648, 46.510525}, {-0.413298, 0.834793, 0.363738}},
    {{-28.731552, 99.823418, 11.183250}, {-0.413298, 0.834793, 0.363738}},
    {{-6.092322, 89.633186, -54.787434}, {-0.373031, 0.777898, -0.505690}},
    {{-59.236946, 79.008713, -32.930782}, {-0.373031, 0.777898, -0.505690}},
    {{-33.303909, 94.042290, -28.436522}, {-0.373031, 0.777898, -0.505690}},
    {{-6.092322, 89.633186, -54.787434}, {-0.373031, 0.777898, -0.505690}},
    {{-56.979099, 61.194454, -61.973579}, {-0.373031, 0.777898, -0.505690}},
    {{-59.236946, 79.008713, -32.930782}, {-0.373031, 0.777898, -0.505690}},
    {{-6.092322, 89.633186, -54.787434}, {-0.373031, 0.777898, -0.505690}},
    {{-30.602711, 65.193222, -74.782700}, {-0.373031, 0.777898, -0.505690}},
    {{-56.979099, 61.194454, -61.973579}, {-0.373031, 0.777898, -0.505690}},
    {{17.134453, 93.168060, 42.582535}, {-0.011254, 0.981064, 0.193358}},
    {{-28.731447, 99.823463, 11.183199}, {-0.011254, 0.981064, 0.193358}},
    {{-13.491167, 92.265694, 46.510448}, {-0.011254, 0.981064, 0.193358}},
    {{17.134453, 93.168060, 42.582535}, {-0.011254, 0.981064, 0.193358}},
    {{-23.873951, 101.823990, 1.911620}, {-0.011254, 0.981064, 0.193358}},
    {{-28.731447, 99.823463, 11.183199}, {-0.011254, 0.981064, 0.193358}},
    {{17.134453, 93.168060, 42.582535}, {-0.011254, 0.981064, 0.193358}},
    {{13.902573, 103.056084, -3.487652}, {-0.011254, 0.981064, 0.193358}},
    {{-23.873951, 101.823990, 1.911620}, {-0.011254, 0.981064, 0.193358}},
    {{17.134453, 93.168060, 42.582535}, {-0.011254, 0.981064, 0.193358}},
    {{27.999014, 98.637932, 17.210474}, {-0.011254, 0.981064, 0.193358}},
    {{13.902573, 103.056084, -3.487652}, {-0.011254, 0.981064, 0.193358}},
    {{35.277367, 74.746124, 63.611904}, {0.042063, 0.773775, 0.632063}},
    {{-6.210638, 61.205288, 84.110489}, {0.042063, 0.773775, 0.632063}},
    {{15.084045, 59.990696, 83.648880}, {0.042063, 0.773775, 0.632063}},
    {{35.277367, 74.746124, 63.611904}, {0.042063, 0.773775, 0.632063}},
    {{-22.574947, 82.919968, 58.860588}, {0.042063, 0.773775, 0.632063}},
    {{-6.210638, 61.205288, 84.110489}, {0.042063, 0.773775, 0.632063}},
    {{35.277367, 74.746124, 63.611904}, {0.042063, 0.773775, 0.632063}},
    {{-13.491215, 92.265640, 46.510521}, {0.042063, 0.773775, 0.632063}},
    {{-22.574947, 82.919968, 58.860588}, {0.042063, 0.773775, 0.632063}},
    {{35.277367, 74.746124, 63.611904}, {0.042063, 0.773775, 0.632063}},
    {{17.134529, 93.168007, 42.582596}, {0.042063, 0.773775, 0.632063}},
    {{-13.491215, 92.265640, 46.510521}, {0.042063, 0.773775, 0.632063}},
    {{13.902615, 103.056061, -3.487653}, {-0.053733, 0.959376, -0.276966}},
    {{-33.303959, 94.042252, -28.436584}, {-0.053733, 0.959376, -0.276966}},
    {{-23.873987, 101.823959, 1.911621}, {-0.053733, 0.959376, -0.276966}},
    {{13.902615, 103.056061, -3.487653}, {-0.053733, 0.959376, -0.276966}},
    {{-6.092392, 89.633148, -54.787472}, {-0.053733, 0.959376, -0.276966}},
    {{-33.303959, 94.042252, -28.436584}, {-0.053733, 0.959376, -0.276966}},
    {{13.902615, 103.056061, -3.487653}, {-0.053733, 0.959376, -0.276966}},
    {{-4.105681, 89.777145, -54.735535}, {-0.053733, 0.959376, -0.276966}},
    {{-6.092392, 89.633148, -54.787472}, {-0.053733, 0.959376, -0.276966}},
    {{13.902615, 103.056061, -3.487653}, {-0.053733, 0.959376, -0.276966}},
    {{21.127712, 97.919167, -27.303913}, {-0.053733, 0.959376, -0.276966}},
    {{-4.105681, 89.777145, -54.735535}, {-0.053733, 0.959376, -0.276966}},
    {{51.663662, 84.099937, -33.385513}, {0.282426, 0.815080, -0.505845}},
    {{-4.105537, 89.777199, -54.735497}, {0.282426, 0.815080, -0.505845}},
    {{21.127722, 97.919159, -27.304060}, {0.282426, 0.815080, -0.505845}},
    {{51.663662, 84.099937, -33.385513}, {0.282426, 0.815080, -0.505845}},
    {{24.846096, 68.653954, -73.810074}, {0.282426, 0.815080, -0.505845}},
    {{-4.105537, 89.777199, -54.735497}, {0.282426, 0.815080, -0.505845}},
    {{51.663662, 84.099937, -33.385513}, {0.282426, 0.815080, -0.505845}},
    {{47.392448, 67.226128, -63.739540}, {0.282426, 0.815080, -0.505845}},
    {{24.846096, 68.653954, -73.810074}, {0.282426, 0.815080, -0.505845}},
    {{51.366432, 68.483177, 59.084572}, {0.432423, 0.821035, 0.372709}},
    {{17.134684, 93.168022, 42.582573}, {0.432423, 0.821035, 0.372709}},
    {{35.277466, 74.746201, 63.611805}, {0.432423, 0.821035, 0.372709}},
    {{51.366432, 68.483177, 59.084572}, {0.432423, 0.821035, 0.372709}},
    {{27.999207, 98.637863, 17.210638}, {0.432423, 0.821035, 0.372709}},
    {{17.134684, 93.168022, 42.582573}, {0.432423, 0.821035, 0.372709}},
    {{51.366432, 68.483177, 59.084572}, {0.432423, 0.821035, 0.372709}},
    {{58.729935, 84.866791, 12.723954}, {0.432423, 0.821035, 0.372709}},
    {{27.999207, 98.637863, 17.210638}, {0.432423, 0.821035, 0.372709}},
    {{51.366432, 68.483177, 59.084572}, {0.432423, 0.821035, 0.372709}},
    {{69.064110, 72.722267, 28.501665}, {0.432423, 0.821035, 0.372709}},
    {{58.729935, 84.866791, 12.723954}, {0.432423, 0.821035, 0.372709}},
    {{58.730019, 84.866692, 12.723857}, {0.394122, 0.914391, -0.092501}},
    {{13.902479, 103.056061, -3.487717}, {0.394122, 0.914391, -0.092501}},
    {{27.999035, 98.637871, 17.210588}, {0.394122, 0.914391, -0.092501}},
    {{58.730019, 84.866692, 12.723857}, {0.394122, 0.914391, -0.092501}},
    {{21.127586, 97.919159, -27.304008}, {0.394122, 0.914391, -0.092501}},
    {{13.902479, 103.056061, -3.487717}, {0.394122, 0.914391, -0.092501}},
    {{58.730019, 84.866692, 12.723857}, {0.394122, 0.914391, -0.092501}},
    {{51.663757, 84.099838, -33.385509}, {0.394122, 0.914391, -0.092501}},
    {{21.127586, 97.919159, -27.304008}, {0.394122, 0.914391, -0.092501}},
    {{58.730019, 84.866692, 12.723857}, {0.394122, 0.914391, -0.092501}},
    {{63.174225, 80.089333, -21.312580}, {0.394122, 0.914391, -0.092501}},
    {{51.663757, 84.099838, -33.385509}, {0.394122, 0.914391, -0.092501}},
    {{64.513000, 45.788433, -67.584877}, {0.376028, 0.462615, -0.802864}},
    {{24.846119, 68.653831, -73.810173}, {0.376028, 0.462615, -0.802864}},
    {{47.392509, 67.226006, -63.739620}, {0.376028, 0.462615, -0.802864}},
    {{64.513000, 45.788433, -67.584877}, {0.376028, 0.462615, -0.802864}},
    {{12.458982, 46.471558, -92.310898}, {0.376028, 0.462615, -0.802864}},
    {{24.846119, 68.653831, -73.810173}, {0.376028, 0.462615, -0.802864}},
    {{64.513000, 45.788433, -67.584877}, {0.376028, 0.462615, -0.802864}},
    {{23.525574, 27.849504, -97.486908}, {0.376028, 0.462615, -0.802864}},
    {{12.458982, 46.471558, -92.310898}, {0.376028, 0.462615, -0.802864}},
    {{64.513000, 45.788433, -67.584877}, {0.376028, 0.462615, -0.802864}},
    {{52.905384, 21.576996, -86.855293}, {0.376028, 0.462615, -0.802864}},
    {{23.525574, 27.849504, -97.486908}, {0.376028, 0.462615, -0.802864}},
    {{85.884651, 53.801395, -23.384901}, {0.657902, 0.616170, -0.433012}},
    {{51.663712, 84.099930, -33.385380}, {0.657902, 0.616170, -0.433012}},
    {{63.174133, 80.089439, -21.312496}, {0.657902, 0.616170, -0.433012}},
    {{85.884651, 53.801395, -23.384901}, {0.657902, 0.616170, -0.433012}},
    {{47.392460, 67.226051, -63.739578}, {0.657902, 0.616170, -0.433012}},
    {{51.663712, 84.099930, -33.385380}, {0.657902, 0.616170, -0.433012}},
    {{85.884651, 53.801395, -23.384901}, {0.657902, 0.616170, -0.433012}},
    {{64.513039, 45.788361, -67.584862}, {0.657902, 0.616170, -0.433012}},
    {{47.392460, 67.226051, -63.739578}, {0.657902, 0.616170, -0.433012}},
    {{85.884651, 53.801395, -23.384901}, {0.657902, 0.616170, -0.433012}},
    {{82.065903, 38.830635, -50.360611}, {0.657902, 0.616170, -0.433012}},
    {{64.513039, 45.788361, -67.584862}, {0.657902, 0.616170, -0.433012}},
    {{67.330452, 32.508114, 73.482086}, {0.722363, 0.512681, 0.464058}},
    {{69.064377, 72.721977, 28.501804}, {0.722363, 0.512681, 0.464058}},
    {{51.366703, 68.482941, 59.084602}, {0.722363, 0.512681, 0.464058}},
    {{67.330452, 32.508114, 73.482086}, {0.722363, 0.512681, 0.464058}},
    {{85.496269, 53.731178, 24.291931}, {0.722363, 0.512681, 0.464058}},
    {{69.064377, 72.721977, 28.501804}, {0.722363, 0.512681, 0.464058}},
    {{67.330452, 32.508114, 73.482086}, {0.722363, 0.512681, 0.464058}},
    {{87.901764, 28.913990, 46.922813}, {0.722363, 0.512681, 0.464058}},
    {{85.496269, 53.731178, 24.291931}, {0.722363, 0.512681, 0.464058}},
    {{85.496330, 53.731117, 24.291677}, {0.761309, 0.647799, 0.027651}},
    {{58.730003, 84.866737, 12.723763}, {0.761309, 0.647799, 0.027651}},
    {{69.064262, 72.722122, 28.501596}, {0.761309, 0.647799, 0.027651}},
    {{85.496330, 53.731117, 24.291677}, {0.761309, 0.647799, 0.027651}},
    {{63.174179, 80.089409, -21.312531}, {0.761309, 0.647799, 0.027651}},
    {{58.730003, 84.866737, 12.723763}, {0.761309, 0.647799, 0.027651}},
    {{85.496330, 53.731117, 24.291677}, {0.761309, 0.647799, 0.027651}},
    {{85.884621, 53.801437, -23.384951}, {0.761309, 0.647799, 0.027651}},
    {{63.174179, 80.089409, -21.312531}, {0.761309, 0.647799, 0.027651}},
    {{85.496330, 53.731117, 24.291677}, {0.761309, 0.647799, 0.027651}},
    {{94.520576, 43.587742, -4.252197}, {0.761309, 0.647799, 0.027651}},
    {{85.884621, 53.801437, -23.384951}, {0.761309, 0.647799, 0.027651}},
    {{87.901817, 28.913784, 46.922752}, {0.939273, 0.281268, 0.196606}},
    {{94.520561, 43.587742, -4.252226}, {0.939273, 0.281268, 0.196606}},
    {{85.496307, 53.731133, 24.291695}, {0.939273, 0.281268, 0.196606}},
    {{87.901817, 28.913784, 46.922752}, {0.939273, 0.281268, 0.196606}},
    {{102.619659, 15.493771, -3.900787}, {0.939273, 0.281268, 0.196606}},
    {{94.520561, 43.587742, -4.252226}, {0.939273, 0.281268, 0.196606}},
    {{87.901817, 28.913784, 46.922752}, {0.939273, 0.281268, 0.196606}},
    {{99.195885, -1.451551, 35.363575}, {0.939273, 0.281268, 0.196606}},
    {{102.619659, 15.493771, -3.900787}, {0.939273, 0.281268, 0.196606}},
    {{98.953644, -3.410105, 35.889328}, {0.991838, -0.105498, 0.071601}},
    {{102.619629, 15.493916, -3.900742}, {0.991838, -0.105498, 0.071601}},
    {{99.195854, -1.451406, 35.363598}, {0.991838, -0.105498, 0.071601}},
    {{98.953644, -3.410105, 35.889328}, {0.991838, -0.105498, 0.071601}},
    {{101.543015, -0.266998, -22.470692}, {0.991838, -0.105498, 0.071601}},
    {{102.619629, 15.493916, -3.900742}, {0.991838, -0.105498, 0.071601}},
    {{98.953644, -3.410105, 35.889328}, {0.991838, -0.105498, 0.071601}},
    {{97.194992, -35.120090, -12.120614}, {0.991838, -0.105498, 0.071601}},
    {{101.543015, -0.266998, -22.470692}, {0.991838, -0.105498, 0.071601}},
    {{98.953644, -3.410105, 35.889328}, {0.991838, -0.105498, 0.071601}},
    {{95.940147, -38.405106, 10.940356}, {0.991838, -0.105498, 0.071601}},
    {{97.194992, -35.120090, -12.120614}, {0.991838, -0.105498, 0.071601}},
    {{94.520592, 43.587711, -4.252222}, {0.931158, 0.260887, -0.254721}},
    {{82.065903, 38.830704, -50.360588}, {0.931158, 0.260887, -0.254721}},
    {{85.884636, 53.801418, -23.384966}, {0.931158, 0.260887, -0.254721}},
    {{94.520592, 43.587711, -4.252222}, {0.931158, 0.260887, -0.254721}},
    {{92.216278, 5.085384, -48.529018}, {0.931158, 0.260887, -0.254721}},
    {{82.065903, 38.830704, -50.360588}, {0.931158, 0.260887, -0.254721}},
    {{94.520592, 43.587711, -4.252222}, {0.931158, 0.260887, -0.254721}},
    {{101.543053, -0.267000, -22.470602}, {0.931158, 0.260887, -0.254721}},
    {{92.216278, 5.085384, -48.529018}, {0.931158, 0.260887, -0.254721}},
    {{94.520592, 43.587711, -4.252222}, {0.931158, 0.260887, -0.254721}},
    {{102.619652, 15.493824, -3.900775}, {0.931158, 0.260887, -0.254721}},
    {{101.543053, -0.267000, -22.470602}, {0.931158, 0.260887, -0.254721}},
    {{92.216286, 5.085361, -48.528965}, {0.727613, 0.171411, -0.664226}},
    {{64.513023, 45.788429, -67.584839}, {0.727613, 0.171411, -0.664226}},
    {{82.065903, 38.830730, -50.360542}, {0.727613, 0.171411, -0.664226}},
    {{92.216286, 5.085361, -48.528965}, {0.727613, 0.171411, -0.664226}},
    {{52.905388, 21.576929, -86.855301}, {0.727613, 0.171411, -0.664226}},
    {{64.513023, 45.788429, -67.584839}, {0.727613, 0.171411, -0.664226}},
    {{92.216286, 5.085361, -48.528965}, {0.727613, 0.171411, -0.664226}},
    {{60.942505, -0.862875, -84.234520}, {0.727613, 0.171411, -0.664226}},
    {{52.905388, 21.576929, -86.855301}, {0.727613, 0.171411, -0.664226}},
    {{92.216286, 5.085361, -48.528965}, {0.727613, 0.171411, -0.664226}},
    {{84.010757, -7.641956, -60.951317}, {0.727613, 0.171411, -0.664226}},
    {{60.942505, -0.862875, -84.234520}, {0.727613, 0.171411, -0.664226}},
    {{60.942375, -0.862820, -84.234657}, {0.351666, -0.002387, -0.936122}},
    {{23.525629, 27.849373, -97.486938}, {0.351666, -0.002387, -0.936122}},
    {{52.905327, 21.576820, -86.855400}, {0.351666, -0.002387, -0.936122}},
    {{60.942375, -0.862820, -84.234657}, {0.351666, -0.002387, -0.936122}},
    {{8.001783, 0.070934, -103.536003}, {0.351666, -0.002387, -0.936122}},
    {{23.525629, 27.849373, -97.486938}, {0.351666, -0.002387, -0.936122}},
    {{60.942375, -0.862820, -84.234657}, {0.351666, -0.002387, -0.936122}},
    {{21.987135, -24.697216, -98.777451}, {0.351666, -0.002387, -0.936122}},
    {{8.001783, 0.070934, -103.536003}, {0.351666, -0.002387, -0.936122}},
    {{60.942375, -0.862820, -84.234657}, {0.351666, -0.002387, -0.936122}},
    {{43.667530, -25.387817, -90.877380}, {0.351666, -0.002387, -0.936122}},
    {{21.987135, -24.697216, -98.777451}, {0.351666, -0.002387, -0.936122}},
    {{66.667976, -12.715118, 79.163857}, {0.806998, 0.072132, 0.586133}},
    {{67.330360, 32.507877, 73.482254}, {0.806998, 0.072132, 0.586133}},
    {{64.459763, 28.262726, 77.693733}, {0.806998, 0.072132, 0.586133}},
    {{66.667976, -12.715118, 79.163857}, {0.806998, 0.072132, 0.586133}},
    {{87.901855, 28.913713, 46.922752}, {0.806998, 0.072132, 0.586133}},
    {{67.330360, 32.507877, 73.482254}, {0.806998, 0.072132, 0.586133}},
    {{66.667976, -12.715118, 79.163857}, {0.806998, 0.072132, 0.586133}},
    {{99.195892, -1.451525, 35.363625}, {0.806998, 0.072132, 0.586133}},
    {{87.901855, 28.913713, 46.922752}, {0.806998, 0.072132, 0.586133}},
    {{66.667976, -12.715118, 79.163857}, {0.806998, 0.072132, 0.586133}},
    {{98.953712, -3.409930, 35.889275}, {0.806998, 0.072132, 0.586133}},
    {{99.195892, -1.451525, 35.363625}, {0.806998, 0.072132, 0.586133}},
    {{66.667976, -12.715118, 79.163857}, {0.806998, 0.072132, 0.586133}},
    {{80.736343, -21.537384, 61.677929}, {0.806998, 0.072132, 0.586133}},
    {{98.953712, -3.409930, 35.889275}, {0.806998, 0.072132, 0.586133}},
    {{72.749268, -55.866211, 48.896759}, {0.859363, -0.358375, 0.364776}},
    {{98.953690, -3.410156, 35.889271}, {0.859363, -0.358375, 0.364776}},
    {{80.736397, -21.537457, 61.677826}, {0.859363, -0.358375, 0.364776}},
    {{72.749268, -55.866211, 48.896759}, {0.859363, -0.358375, 0.364776}},
    {{95.940201, -38.405029, 10.940414}, {0.859363, -0.358375, 0.364776}},
    {{98.953690, -3.410156, 35.889271}, {0.859363, -0.358375, 0.364776}},
    {{72.749268, -55.866211, 48.896759}, {0.859363, -0.358375, 0.364776}},
    {{81.560234, -59.625866, 24.985786}, {0.859363, -0.358375, 0.364776}},
    {{95.940201, -38.405029, 10.940414}, {0.859363, -0.358375, 0.364776}},
    {{97.195045, -35.120041, -12.120563}, {0.898219, -0.217949, -0.381708}},
    {{92.216263, 5.085335, -48.529060}, {0.898219, -0.217949, -0.381708}},
    {{101.543045, -0.267059, -22.470608}, {0.898219, -0.217949, -0.381708}},
    {{97.195045, -35.120041, -12.120563}, {0.898219, -0.217949, -0.381708}},
    {{84.010796, -7.641888, -60.951302}, {0.898219, -0.217949, -0.381708}},
    {{92.216263, 5.085335, -48.529060}, {0.898219, -0.217949, -0.381708}},
    {{97.195045, -35.120041, -12.120563}, {0.898219, -0.217949, -0.381708}},
    {{78.692741, -42.221069, -53.141113}, {0.898219, -0.217949, -0.381708}},
    {{84.010796, -7.641888, -60.951302}, {0.898219, -0.217949, -0.381708}},
    {{97.195045, -35.120041, -12.120563}, {0.898219, -0.217949, -0.381708}},
    {{85.337067, -50.564003, -31.848513}, {0.898219, -0.217949, -0.381708}},
    {{78.692741, -42.221069, -53.141113}, {0.898219, -0.217949, -0.381708}},
    {{78.692711, -42.221077, -53.141144}, {0.643951, -0.259265, -0.719797}},
    {{60.942513, -0.862839, -84.234512}, {0.643951, -0.259265, -0.719797}},
    {{84.010765, -7.641900, -60.951332}, {0.643951, -0.259265, -0.719797}},
    {{78.692711, -42.221077, -53.141144}, {0.643951, -0.259265, -0.719797}},
    {{43.667557, -25.387939, -90.877304}, {0.643951, -0.259265, -0.719797}},
    {{60.942513, -0.862839, -84.234512}, {0.643951, -0.259265, -0.719797}},
    {{78.692711, -42.221077, -53.141144}, {0.643951, -0.259265, -0.719797}},
    {{54.658287, -53.547871, -70.694374}, {0.643951, -0.259265, -0.719797}},
    {{43.667557, -25.387939, -90.877304}, {0.643951, -0.259265, -0.719797}},
    {{67.988983, -75.828224, -20.034397}, {0.624811, -0.625051, -0.467892}},
    {{78.692726, -42.221016, -53.141155}, {0.624811, -0.625051, -0.467892}},
    {{85.337074, -50.563999, -31.848463}, {0.624811, -0.625051, -0.467892}},
    {{67.988983, -75.828224, -20.034397}, {0.624811, -0.625051, -0.467892}},
    {{54.658249, -53.547836, -70.694420}, {0.624811, -0.625051, -0.467892}},
    {{78.692726, -42.221016, -53.141155}, {0.624811, -0.625051, -0.467892}},
    {{67.988983, -75.828224, -20.034397}, {0.624811, -0.625051, -0.467892}},
    {{43.605957, -67.310127, -66.510887}, {0.624811, -0.625051, -0.467892}},
    {{54.658249, -53.547836, -70.694420}, {0.624811, -0.625051, -0.467892}},
    {{67.988983, -75.828224, -20.034397}, {0.624811, -0.625051, -0.467892}},
    {{44.684795, -85.667305, -38.692795}, {0.624811, -0.625051, -0.467892}},
    {{43.605957, -67.310127, -66.510887}, {0.624811, -0.625051, -0.467892}},
    {{95.940201, -38.404961, 10.940351}, {0.824199, -0.565164, -0.035857}},
    {{85.337021, -50.563988, -31.848591}, {0.824199, -0.565164, -0.035857}},
    {{97.195053, -35.119946, -12.120552}, {0.824199, -0.565164, -0.035857}},
    {{95.940201, -38.404961, 10.940351}, {0.824199, -0.565164, -0.035857}},
    {{67.988907, -75.828232, -20.034517}, {0.824199, -0.565164, -0.035857}},
    {{85.337021, -50.563988, -31.848591}, {0.824199, -0.565164, -0.035857}},
    {{95.940201, -38.404961, 10.940351}, {0.824199, -0.565164, -0.035857}},
    {{66.594826, -79.540665, 6.543749}, {0.824199, -0.565164, -0.035857}},
    {{67.988907, -75.828232, -20.034517}, {0.824199, -0.565164, -0.035857}},
    {{95.940201, -38.404961, 10.940351}, {0.824199, -0.565164, -0.035857}},
    {{81.560196, -59.625858, 24.985760}, {0.824199, -0.565164, -0.035857}},
    {{66.594826, -79.540665, 6.543749}, {0.824199, -0.565164, -0.035857}},
    {{10.318642, -68.704552, -77.212288}, {0.293897, -0.480111, -0.826509}},
    {{54.658356, -53.547829, -70.694336}, {0.293897, -0.480111, -0.826509}},
    {{43.606003, -67.310173, -66.510788}, {0.293897, -0.480111, -0.826509}},
    {{10.318642, -68.704552, -77.212288}, {0.293897, -0.480111, -0.826509}},
    {{43.667648, -25.387859, -90.877274}, {0.293897, -0.480111, -0.826509}},
    {{54.658356, -53.547829, -70.694336}, {0.293897, -0.480111, -0.826509}},
    {{10.318642, -68.704552, -77.212288}, {0.293897, -0.480111, -0.826509}},
    {{21.987045, -24.697201, -98.777443}, {0.293897, -0.480111, -0.826509}},
    {{43.667648, -25.387859, -90.877274}, {0.293897, -0.480111, -0.826509}},
    {{10.318642, -68.704552, -77.212288}, {0.293897, -0.480111, -0.826509}},
    {{2.230395, -48.414589, -91.813110}, {0.293897, -0.480111, -0.826509}},
    {{21.987045, -24.697201, -98.777443}, {0.293897, -0.480111, -0.826509}},
    {{21.096994, -101.565704, -4.920750}, {0.448074, -0.886562, -0.115055}},
    {{66.594933, -79.540604, 6.543758}, {0.448074, -0.886562, -0.115055}},
    {{42.029984, -93.467781, 18.399925}, {0.448074, -0.886562, -0.115055}},
    {{21.096994, -101.565704, -4.920750}, {0.448074, -0.886562, -0.115055}},
    {{67.988983, -75.828194, -20.034451}, {0.448074, -0.886562, -0.115055}},
    {{66.594933, -79.540604, 6.543758}, {0.448074, -0.886562, -0.115055}},
    {{21.096994, -101.565704, -4.920750}, {0.448074, -0.886562, -0.115055}},
    {{44.684792, -85.667282, -38.692841}, {0.448074, -0.886562, -0.115055}},
    {{67.988983, -75.828194, -20.034451}, {0.448074, -0.886562, -0.115055}},
    {{21.096994, -101.565704, -4.920750}, {0.448074, -0.886562, -0.115055}},
    {{26.448235, -95.956314, -30.336487}, {0.448074, -0.886562, -0.115055}},
    {{44.684792, -85.667282, -38.692841}, {0.448074, -0.886562, -0.115055}},
    {{26.448275, -95.956314, -30.336475}, {0.178848, -0.824350, -0.537085}},
    {{43.605999, -67.310127, -66.510864}, {0.178848, -0.824350, -0.537085}},
    {{44.684814, -85.667290, -38.692818}, {0.178848, -0.824350, -0.537085}},
    {{26.448275, -95.956314, -30.336475}, {0.178848, -0.824350, -0.537085}},
    {{10.318703, -68.704491, -77.212357}, {0.178848, -0.824350, -0.537085}},
    {{43.605999, -67.310127, -66.510864}, {0.178848, -0.824350, -0.537085}},
    {{26.448275, -95.956314, -30.336475}, {0.178848, -0.824350, -0.537085}},
    {{-9.659536, -86.337463, -58.561741}, {0.178848, -0.824350, -0.537085}},
    {{10.318703, -68.704491, -77.212357}, {0.178848, -0.824350, -0.537085}},
    {{26.448275, -95.956314, -30.336475}, {0.178848, -0.824350, -0.537085}},
    {{-8.323759, -90.990784, -51.102245}, {0.178848, -0.824350, -0.537085}},
    {{-9.659536, -86.337463, -58.561741}, {0.178848, -0.824350, -0.537085}},
    {{-43.114555, -66.433311, -67.251411}, {-0.147478, -0.617956, -0.772257}},
    {{10.318568, -68.704514, -77.212387}, {-0.147478, -0.617956, -0.772257}},
    {{-9.659567, -86.337334, -58.561958}, {-0.147478, -0.617956, -0.772257}},
    {{-43.114555, -66.433311, -67.251411}, {-0.147478, -0.617956, -0.772257}},
    {{2.230452, -48.414700, -91.813080}, {-0.147478, -0.617956, -0.772257}},
    {{10.318568, -68.704514, -77.212387}, {-0.147478, -0.617956, -0.772257}},
    {{-43.114555, -66.433311, -67.251411}, {-0.147478, -0.617956, -0.772257}},
    {{-33.701233, -39.150417, -91.363121}, {-0.147478, -0.617956, -0.772257}},
    {{2.230452, -48.414700, -91.813080}, {-0.147478, -0.617956, -0.772257}},
    {{-28.738079, -97.109978, -22.737461}, {-0.001627, -0.978505, -0.206219}},
    {{21.096985, -101.565712, -4.920782}, {-0.001627, -0.978505, -0.206219}},
    {{-11.357666, -103.650993, 5.863500}, {-0.001627, -0.978505, -0.206219}},
    {{-28.738079, -97.109978, -22.737461}, {-0.001627, -0.978505, -0.206219}},
    {{26.448231, -95.956329, -30.336452}, {-0.001627, -0.978505, -0.206219}},
    {{21.096985, -101.565712, -4.920782}, {-0.001627, -0.978505, -0.206219}},
    {{-28.738079, -97.109978, -22.737461}, {-0.001627, -0.978505, -0.206219}},
    {{-8.323753, -90.990799, -51.102234}, {-0.001627, -0.978505, -0.206219}},
    {{26.448231, -95.956329, -30.336452}, {-0.001627, -0.978505, -0.206219}},
    {{-35.841278, -34.834282, -92.213829}, {-0.097284, -0.242319, -0.965307}},
    {{2.230587, -48.414833, -91.812958}, {-0.097284, -0.242319, -0.965307}},
    {{-33.701313, -39.150536, -91.362976}, {-0.097284, -0.242319, -0.965307}},
    {{-35.841278, -34.834282, -92.213829}, {-0.097284, -0.242319, -0.965307}},
    {{21.987194, -24.697292, -98.777390}, {-0.097284, -0.242319, -0.965307}},
    {{2.230587, -48.414833, -91.812958}, {-0.097284, -0.242319, -0.965307}},
    {{-35.841278, -34.834282, -92.213829}, {-0.097284, -0.242319, -0.965307}},
    {{8.001731, 0.070936, -103.535995}, {-0.097284, -0.242319, -0.965307}},
    {{21.987194, -24.697292, -98.777390}, {-0.097284, -0.242319, -0.965307}},
    {{-35.841278, -34.834282, -92.213829}, {-0.097284, -0.242319, -0.965307}},
    {{-21.506315, 1.327044, -101.685585}, {-0.097284, -0.242319, -0.965307}},
    {{8.001731, 0.070936, -103.535995}, {-0.097284, -0.242319, -0.965307}},
    {{-60.052704, -66.156479, -53.585846}, {-0.341727, -0.821107, -0.457172}},
    {{-28.738235, -97.109932, -22.737617}, {-0.341727, -0.821107, -0.457172}},
    {{-55.002827, -85.953445, -21.320669}, {-0.341727, -0.821107, -0.457172}},
    {{-60.052704, -66.156479, -53.585846}, {-0.341727, -0.821107, -0.457172}},
    {{-8.323920, -90.990753, -51.102364}, {-0.341727, -0.821107, -0.457172}},
    {{-28.738235, -97.109932, -22.737617}, {-0.341727, -0.821107, -0.457172}},
    {{-60.052704, -66.156479, -53.585846}, {-0.341727, -0.821107, -0.457172}},
    {{-9.659641, -86.337570, -58.561638}, {-0.341727, -0.821107, -0.457172}},
    {{-8.323920, -90.990753, -51.102364}, {-0.341727, -0.821107, -0.457172}},
    {{-60.052704, -66.156479, -53.585846}, {-0.341727, -0.821107, -0.457172}},
    {{-43.114742, -66.433449, -67.251175}, {-0.341727, -0.821107, -0.457172}},
    {{-9.659641, -86.337570, -58.561638}, {-0.341727, -0.821107, -0.457172}},
    {{-72.628403, -14.650492, -74.323227}, {-0.568438, -0.408280, -0.714273}},
    {{-76.960266, -47.938141, -50.746315}, {-0.568438, -0.408280, -0.714273}},
    {{-75.607742, -16.174744, -70.972595}, {-0.568438, -0.408280, -0.714273}},
    {{-72.628403, -14.650492, -74.323227}, {-0.568438, -0.408280, -0.714273}},
    {{-60.052887, -66.156212, -53.586006}, {-0.568438, -0.408280, -0.714273}},
    {{-76.960266, -47.938141, -50.746315}, {-0.568438, -0.408280, -0.714273}},
    {{-72.628403, -14.650492, -74.323227}, {-0.568438, -0.408280, -0.714273}},
    {{-43.114891, -66.433197, -67.251343}, {-0.568438, -0.408280, -0.714273}},
    {{-60.052887, -66.156212, -53.586006}, {-0.568438, -0.408280, -0.714273}},
    {{-72.628403, -14.650492, -74.323227}, {-0.568438, -0.408280, -0.714273}},
    {{-33.701439, -39.150307, -91.363129}, {-0.568438, -0.408280, -0.714273}},
    {{-43.114891, -66.433197, -67.251343}, {-0.568438, -0.408280, -0.714273}},
    {{-72.628403, -14.650492, -74.323227}, {-0.568438, -0.408280, -0.714273}},
    {{-35.841156, -34.834579, -92.213867}, {-0.568438, -0.408280, -0.714273}},
    {{-33.701439, -39.150307, -91.363129}, {-0.568438, -0.408280, -0.714273}},
    {{-59.487282, 18.407536, -83.000877}, {-0.446399, -0.017682, -0.894659}},
    {{-35.841000, -34.834534, -92.213890}, {-0.446399, -0.017682, -0.894659}},
    {{-72.628403, -14.650394, -74.323135}, {-0.446399, -0.017682, -0.894659}},
    {{-59.487282, 18.407536, -83.000877}, {-0.446399, -0.017682, -0.894659}},
    {{-21.506187, 1.327015, -101.685608}, {-0.446399, -0.017682, -0.894659}},
    {{-35.841000, -34.834534, -92.213890}, {-0.446399, -0.017682, -0.894659}},
    {{-59.487282, 18.407536, -83.000877}, {-0.446399, -0.017682, -0.894659}},
    {{-34.018745, 20.495792, -96.299118}, {-0.446399, -0.017682, -0.894659}},
    {{-21.506187, 1.327015, -101.685608}, {-0.446399, -0.017682, -0.894659}},
    {{-56.979111, 61.194458, -61.973564}, {-0.450401, 0.424436, -0.785490}},
    {{-59.487270, 18.407345, -83.000946}, {-0.450401, 0.424436, -0.785490}},
    {{-69.697273, 42.041008, -64.833176}, {-0.450401, 0.424436, -0.785490}},
    {{-56.979111, 61.194458, -61.973564}, {-0.450401, 0.424436, -0.785490}},
    {{-34.018749, 20.495640, -96.299156}, {-0.450401, 0.424436, -0.785490}},
    {{-59.487270, 18.407345, -83.000946}, {-0.450401, 0.424436, -0.785490}},
    {{-56.979111, 61.194458, -61.973564}, {-0.450401, 0.424436, -0.785490}},
    {{-19.490973, 47.336647, -90.429588}, {-0.450401, 0.424436, -0.785490}},
    {{-34.018749, 20.495640, -96.299156}, {-0.450401, 0.424436, -0.785490}},
    {{-56.979111, 61.194458, -61.973564}, {-0.450401, 0.424436, -0.785490}},
    {{-30.602692, 65.193253, -74.782684}, {-0.450401, 0.424436, -0.785490}},
    {{-19.490973, 47.336647, -90.429588}, {-0.450401, 0.424436, -0.785490}},
    {{24.846054, 68.653824, -73.810188}, {-0.038273, 0.677069, -0.734924}},
    {{-6.092337, 89.633186, -54.787453}, {-0.038273, 0.677069, -0.734924}},
    {{-4.105804, 89.777176, -54.735523}, {-0.038273, 0.677069, -0.734924}},
    {{24.846054, 68.653824, -73.810188}, {-0.038273, 0.677069, -0.734924}},
    {{-30.602705, 65.193245, -74.782700}, {-0.038273, 0.677069, -0.734924}},
    {{-6.092337, 89.633186, -54.787453}, {-0.038273, 0.677069, -0.734924}},
    {{24.846054, 68.653824, -73.810188}, {-0.038273, 0.677069, -0.734924}},
    {{-19.491020, 47.336670, -90.429573}, {-0.038273, 0.677069, -0.734924}},
    {{-30.602705, 65.193245, -74.782700}, {-0.038273, 0.677069, -0.734924}},
    {{24.846054, 68.653824, -73.810188}, {-0.038273, 0.677069, -0.734924}},
    {{12.458939, 46.471565, -92.310898}, {-0.038273, 0.677069, -0.734924}},
    {{-19.491020, 47.336670, -90.429573}, {-0.038273, 0.677069, -0.734924}},
    {{23.525654, 27.849445, -97.486877}, {-0.051705, 0.239174, -0.969599}},
    {{-19.491116, 47.336792, -90.429459}, {-0.051705, 0.239174, -0.969599}},
    {{12.459000, 46.471668, -92.310799}, {-0.051705, 0.239174, -0.969599}},
    {{23.525654, 27.849445, -97.486877}, {-0.051705, 0.239174, -0.969599}},
    {{-34.018894, 20.495672, -96.299088}, {-0.051705, 0.239174, -0.969599}},
    {{-19.491116, 47.336792, -90.429459}, {-0.051705, 0.239174, -0.969599}},
    {{23.525654, 27.849445, -97.486877}, {-0.051705, 0.239174, -0.969599}},
    {{-21.506315, 1.326975, -101.685585}, {-0.051705, 0.239174, -0.969599}},
    {{-34.018894, 20.495672, -96.299088}, {-0.051705, 0.239174, -0.969599}},
    {{23.525654, 27.849445, -97.486877}, {-0.051705, 0.239174, -0.969599}},
    {{8.001733, 0.070927, -103.535988}, {-0.051705, 0.239174, -0.969599}},
    {{-21.506315, 1.326975, -101.685585}, {-0.051705, 0.239174, -0.969599}},
};

float center[3] = {0.217589, 0.244985, 0.925478};
float size = 103.353538;

int gTriangleCount = 244;


static const char *gVertexShaderText = "\n\
varying vec3 vertex_normal;\n\
varying vec4 vertex_position;\n\
varying vec3 eye_direction;\n\
\n\
vec3 unitvec(vec4 p1, vec4 p2)\n\
{\n\
    if(p1.w == 0 && p2.w == 0)\n\
	return vec3(p2 - p1);\n\
    if(p1.w == 0)\n\
	return vec3(-p1);\n\
    if(p2.w == 0)\n\
	return vec3(p2);\n\
    return p2.xyz / p2.w - p1.xyz / p1.w;\n\
}\n\
\n\
void main()\n\
{\n\
\n\
    vertex_normal = gl_NormalMatrix * gl_Normal;\n\
    vertex_position = gl_ModelViewMatrix * gl_Vertex;\n\
    eye_direction = normalize(unitvec(vertex_position, vec4(0, 0, 0, 1)));\n\
\n\
    gl_Position = ftransform();\n\
}\n";


static const char *gFragmentShaderText = "\n\
#if defined(texture_diffuse_source)\n\
    uniform sampler2D texture_diffuse;\n\
#endif\n\
\n\
varying vec3 vertex_normal;\n\
varying vec4 vertex_position;\n\
varying vec3 eye_direction;\n\
\n\
vec3 unitvec(vec4 p1, vec4 p2)\n\
{\n\
    if(p1.w == 0 && p2.w == 0)\n\
	return vec3(p2 - p1);\n\
    if(p1.w == 0)\n\
	return vec3(-p1);\n\
    if(p2.w == 0)\n\
	return vec3(p2);\n\
    return p2.xyz / p2.w - p1.xyz / p1.w;\n\
}\n\
\n\
void main()\n\
{\n\
#if defined(texture_diffuse_source)\n\
    vec4 diffuse = gl_FrontMaterial.diffuse * texture2D(texture_diffuse, gl_TexCoord[0].st);\n\
#else \n\
    vec4 diffuse = gl_FrontMaterial.diffuse;\n\
#endif\n\
    vec4 ambient = gl_FrontMaterial.ambient;\n\
    vec4 specular = gl_FrontMaterial.specular;\n\
    float shininess = gl_FrontMaterial.shininess;\n\
    vec4 diffusesum = vec4(0, 0, 0, 0);\n\
    vec4 specularsum = vec4(0, 0, 0, 0);\n\
    vec4 ambientsum = vec4(0, 0, 0, 0);\n\
\n\
    vec3 normal = normalize(vertex_normal);\n\
\n\
    int light;\n\
    vec3 edir = eye_direction;\n\
\n\
    for(light = 0; light < gl_MaxLights; light++) {\n\
        if(gl_LightSource[light].spotExponent > 0) {\n\
            vec4 light_pos = gl_LightSource[light].position;\n\
\n\
            vec3 ldir = normalize(unitvec(vertex_position, light_pos));\n\
\n\
            diffusesum += max(0, dot(normal, ldir)) * gl_LightSource[light].diffuse;\n\
\n\
            ambientsum += gl_LightSource[light].ambient;\n\
\n\
            vec3 refl = reflect(-ldir, normal);\n\
            specularsum += pow(max(0, dot(refl, edir)), shininess) * gl_LightSource[light].specular;\n\
        }\n\
    }\n\
\n\
    gl_FragColor = diffusesum * diffuse + ambientsum * ambient + specularsum * specular;\n\
}\n";


void DrawObject(float objectTime, bool drawWireframe)
{
    CHECK_OPENGL(__LINE__);

    static float objectAmbient[4] = {.1, .1, .1, 1};
    static float objectDiffuse[4] = {.8, .8, .8, 1};
    static float objectSpecular[4] = {.5, .5, .5, 1};
    static float objectShininess = 50;

    glMaterialfv(GL_FRONT_AND_BACK, GL_AMBIENT, objectAmbient);
    glMaterialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, objectDiffuse);
    glMaterialfv(GL_FRONT_AND_BACK, GL_SPECULAR, objectSpecular);
    glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, objectShininess);

    glEnableClientState(GL_VERTEX_ARRAY);
    glEnableClientState(GL_NORMAL_ARRAY);
    size_t stride = sizeof(Vertices[0]);
    glVertexPointer(3, GL_FLOAT, stride, (void*)&Vertices[0].v[0]); 
    glNormalPointer(GL_FLOAT, stride, (void*)&Vertices[0].n[0]);

    if(drawWireframe) {
        for(int i = 0; i < gTriangleCount; i++)
            glDrawArrays(GL_LINE_LOOP, i * 3, 3);
    } else {
        glDrawArrays(GL_TRIANGLES, 0, gTriangleCount * 3);
    }

    glDisableClientState(GL_VERTEX_ARRAY);
    glDisableClientState(GL_NORMAL_ARRAY);
    CHECK_OPENGL(__LINE__);
}

void InitializeGL()
{
    glClearColor(.25, .25, .25, 0);
    CHECK_OPENGL(__LINE__);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    glTranslatef(0, 0, -3);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glFrustum(-.1, .1, -.1, .1, .2, 100);

    glMatrixMode(GL_MODELVIEW);

    glEnable(GL_LIGHT0);
    // glLightfv(GL_LIGHT0, GL_DIFFUSE, light0_color);
    // glLightfv(GL_LIGHT0, GL_SPECULAR, light0_color);

    // glEnable(GL_LIGHT1);
    // glLightfv(GL_LIGHT1, GL_DIFFUSE, light1_color);
    // glLightfv(GL_LIGHT1, GL_SPECULAR, light1_color);

    glEnable(GL_LIGHTING);
    CHECK_OPENGL(__LINE__);

    glEnable(GL_DEPTH_TEST);
    glEnable(GL_CULL_FACE);

    glEnable(GL_NORMALIZE);

    CHECK_OPENGL(__LINE__);
}

static void InitializeManipulators()
{
    box bounds;
    for(int i = 0; i < gTriangleCount * 3; i++)
        bounds.extend(Vertices[i].v);

    gSceneManip = new manipulator(bounds, .57595f);

    gObjectManip = new manipulator();
    gObjectManip->calculate_matrix();

    gCurrentManip = gSceneManip;
}

static void ErrorCallback(int error, const char* description)
{
    fprintf(stderr, "GLFW: %s\n", description);
}

static void KeyCallback(GLFWwindow *window, int key, int scancode, int action, int mods)
{
    if(action == GLFW_PRESS) {
        switch(key) {
            case 'W':
                gDrawWireframe = !gDrawWireframe;
                break;

            case 'R':
                gCurrentManip->m_mode = manipulator::ROTATE;
                break;

            case 'O':
                gCurrentManip->m_mode = manipulator::ROLL;
                break;

            case 'X':
                gCurrentManip->m_mode = manipulator::SCROLL;
                break;

            case 'Z':
                gCurrentManip->m_mode = manipulator::DOLLY;
                break;

            case '1':
                gCurrentManip = gSceneManip;
                break;

            case '2':
                gCurrentManip = gObjectManip;
                break;

            case 'Q': case '\033':
                glfwSetWindowShouldClose(window, GL_TRUE);
                break;
        }
    }
}

static void ResizeCallback(GLFWwindow *window, int x, int y)
{
    glfwGetFramebufferSize(window, &gWindowWidth, &gWindowHeight);
    glViewport(0, 0, gWindowWidth, gWindowWidth);
}

static void ButtonCallback(GLFWwindow *window, int b, int action, int mods)
{
    double x, y;
    glfwGetCursorPos(window, &x, &y);

    if(b == GLFW_MOUSE_BUTTON_1 && action == GLFW_PRESS) {
        gButtonPressed = 1;
	gOldMouseX = x;
	gOldMouseY = y;
    } else {
        gButtonPressed = -1;
    }
}

static void MotionCallback(GLFWwindow *window, double x, double y)
{
    // glfw/glfw#103
    // If no motion has been reported yet, we catch the first motion
    // reported and store the current location
    if(!gMotionReported) {
        gMotionReported = true;
        gOldMouseX = x;
        gOldMouseY = y;
    }

    double dx, dy;

    dx = x - gOldMouseX;
    dy = y - gOldMouseY;

    gOldMouseX = x;
    gOldMouseY = y;

    if(gButtonPressed == 1) {
        gCurrentManip->move(dx / gWindowWidth, dy / gWindowHeight);
        if(gCurrentManip == gSceneManip)
            gObjectManip->set_frame(gSceneManip->m_matrix);
    }
}

static void ScrollCallback(GLFWwindow *window, double dx, double dy)
{
    gCurrentManip->move(dx / gWindowWidth, dy / gWindowHeight);
    if(gCurrentManip == gSceneManip)
        gObjectManip->set_frame(gSceneManip->m_matrix);
}

float gFrustumLeft		= -0.66f;
float gFrustumRight	= 0.66f;
float gFrustumBottom	= -0.66f;
float gFrustumTop		= 0.66f;

static void DrawFrame(GLFWwindow *window)
{
    float nearClip, farClip;
    CHECK_OPENGL(__LINE__);

    gFrustumLeft = gFrustumBottom * gWindowWidth / gWindowHeight;
    gFrustumRight = gFrustumTop * gWindowWidth / gWindowHeight;

    /* XXX - need to create new box from all subordinate boxes */
    nearClip = - gSceneManip->m_translation[2] - gSceneManip->m_reference_size;
    farClip = - gSceneManip->m_translation[2] + gSceneManip->m_reference_size;
    if(nearClip < 0.1 * gSceneManip->m_reference_size)
	nearClip = 0.1 * gSceneManip->m_reference_size;
    if(farClip < 0.2 * gSceneManip->m_reference_size)
	nearClip = 0.2 * gSceneManip->m_reference_size;

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glFrustum(gFrustumLeft * nearClip, gFrustumRight * nearClip, gFrustumBottom * nearClip, gFrustumTop * nearClip, nearClip, farClip);
    CHECK_OPENGL(__LINE__);

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

    glMatrixMode(GL_MODELVIEW);
    CHECK_OPENGL(__LINE__);

    glPushMatrix();
    glMultMatrixf((float *)gSceneManip->m_matrix.m_v);
    CHECK_OPENGL(__LINE__);

    /* draw floor, draw shadow, etc */
    CHECK_OPENGL(__LINE__);

    glPushMatrix();
    glMultMatrixf((float *)gObjectManip->m_matrix.m_v);
    DrawObject(0, gDrawWireframe);

    glPopMatrix();

    glPopMatrix();

}

int main()
{
    GLFWwindow* window;

    glfwSetErrorCallback(ErrorCallback);

    if(!glfwInit())
        exit(EXIT_FAILURE);

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1);
    // XXX Move to OpenGL 3.2 and uncomment these:
    // glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
    // glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); 

    glfwWindowHint(GLFW_SAMPLES, 4);
    window = glfwCreateWindow(gWindowWidth = 512, gWindowHeight = 512, "Spin", NULL, NULL);
    if (!window) {
        glfwTerminate();
        fprintf(stdout, "Couldn't open main window\n");
        exit(EXIT_FAILURE);
    }

    glfwMakeContextCurrent(window);

    InitializeGL();
    InitializeManipulators();

    if(gVerbose) {
        printf("GL_RENDERER: %s\n", glGetString(GL_RENDERER));
        printf("GL_VERSION: %s\n", glGetString(GL_VERSION));
    }

    glfwSetKeyCallback(window, KeyCallback);
    glfwSetMouseButtonCallback(window, ButtonCallback);
    glfwSetCursorPosCallback(window, MotionCallback);
    glfwSetScrollCallback(window, ScrollCallback);
    glfwSetFramebufferSizeCallback(window, ResizeCallback);
    glfwSetWindowRefreshCallback(window, DrawFrame);

    while (!glfwWindowShouldClose(window)) {

        DrawFrame(window);

        glfwSwapBuffers(window);

        if(gStreamFrames)
            glfwPollEvents();
        else
            glfwWaitEvents();
    }

    glfwTerminate();
}
